version: 2
jobs:
  build:
    name: Build
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v6-dependencies-{{ checksum "package.json" }}

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v6-dependencies-{{ checksum "package.json" }}

      - save_cache:
          key: v6-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo

  test:
    name: Tests
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v6-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: npm run test

      - store_artifacts:
          path: ~/repo/test/.results
          destination: results

  deploy:
    name: Deploy
    docker:
      - image: circleci/node:latest

    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v6-repo-{{ .Environment.CIRCLE_SHA1 }}
      - add_ssh_keys:
          fingerprints:
            - "db:4a:01:ed:60:55:e8:9f:49:1e:b1:34:6f:4b:05:01"
      - run: SYNCANO_AUTH_KEY=$SYNCANO_AUTH_KEY SYNCANO_HOST=api.syncano.io npx s submit ${SOCKET_NAME} -b patch
      - run: SYNCANO_AUTH_KEY=$SYNCANO_AUTH_KEY SYNCANO_HOST=api.syncano.io npx s publish ${SOCKET_NAME}
      - run:
          name: Avoid hosts unknown for github
          command: mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: git config --global user.email $GITHUB_EMAIL && git config --global user.name $GITHUB_NAME
      - run: git commit -a -m "Bumping version [ci skip]" && git push origin $CIRCLE_BRANCH

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master